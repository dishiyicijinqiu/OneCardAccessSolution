<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Configuration.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<#@ include file="$(ProjectDir)\DbTemplate.ttinclude"  #>
<#DBHost dbhost=new DBHost(TableName);if(IsBuilder) {#>

--<#=dbhost.DbTable.Remark#>
select <# int totallen=0;string prestring="p";for(int i=0;i<dbhost.DbColumns.Count;i++){
var column=dbhost.DbColumns[i];
totallen+=column.ColumnName.Length;
#><#if(!string.IsNullOrWhiteSpace(prestring)){#><#=prestring#>.<#}#><#=column.ColumnName#><#if(i!=dbhost.DbColumns.Count-1){#>,<#}if(totallen>80){totallen=0;#><#="\r\n\t"#> <#}}#>
<#="\r\n"#>from <#=TableName#> <#=prestring#>
where <#=dbhost.DbTable.PrimaryColumn.ColumnName#>=<#=dbhost.DbTable.PrimaryColumn.ColumnName#>

<# foreach(DbColumn column in dbhost.DbColumns){#><#=column.ColumnName#>,<#}#>

<# foreach(DbColumn column in dbhost.DbColumns){#>@<#=column.ColumnName#>,<#}#>



<# foreach(DbColumn column in dbhost.DbColumns){#>
sbSql.Append("<#=column.ColumnName#>=@<#=column.ColumnName#>, ");
<#}#>

<# foreach(DbColumn column in dbhost.DbColumns){#>
Database.AddInParameter(cmd, "<#=column.ColumnName#>", DbType.<#= column.CSharpType#>, model.<#=column.ColumnName#>);
<#}#>


<# foreach(DbColumn column in dbhost.DbColumns){
if(column.ColumnName.ToLower()=="createid"){
#>
	<dxlc:LayoutItem Label="{x:Static res:Resources.Entity_<#=TableName.Replace("T_",string.Empty)#>_Creater}">
		<dxe:TextEdit EditValue="{Binding Creater}"  Style="{StaticResource teCreateDate}"/>
	</dxlc:LayoutItem>
<#} else if(column.ColumnName.ToLower()=="lastmodifyid") {#>
	<dxlc:LayoutItem Label="{x:Static res:Resources.Entity_<#=TableName.Replace("T_",string.Empty)#>_LastModifyer}">
		<dxe:TextEdit EditValue="{Binding LastModifyer}" Style="{StaticResource teLastModifyDate}"/>
	</dxlc:LayoutItem>
<#} else if(column.ColumnName.ToLower()!="deleted" && !column.IsPrimaryKey) {#>
	<dxlc:LayoutItem Label="{x:Static res:Resources.Entity_<#=TableName.Replace("T_",string.Empty)#>_<#=column.ColumnName#>}">
		<dxe:TextEdit EditValue="{Binding <#=column.ColumnName#>, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
	</dxlc:LayoutItem>
<#}
}#>



<# foreach(DbColumn column in dbhost.DbColumns){
if(column.ColumnName.ToLower()=="createid"){
#>
		public string Creater
        {
            get
            {
                return Entity.Creater;
            }
            set
            {
                if (Entity.Creater != value)
                {
                    Entity.Creater = value;
                    RaisePropertyChanged("Creater");
                }
            }
        }
<#} else if(column.ColumnName.ToLower()=="lastmodifyid") {#>
		public string LastModifyer
        {
            get
            {
                return Entity.LastModifyer;
            }
            set
            {
                if (Entity.LastModifyer != value)
                {
                    Entity.LastModifyer = value;
                    RaisePropertyChanged("LastModifyer");
                }
            }
        }
<#} else if(column.ColumnName.ToLower()!="deleted" && !column.IsPrimaryKey) {#>
		public <#= column.CSharpType#> <#=column.ColumnName#>
        {
            get
            {
                return Entity.<#=column.ColumnName#>;
            }
            set
            {
                if (Entity.<#=column.ColumnName#> != value)
                {
                    Entity.<#=column.ColumnName#> = value;
                    RaisePropertyChanged("<#=column.ColumnName#>");
                }
            }
        }
<#}
}#>


<#}#>
<#+
public static readonly string TableName="T_Product";
public static readonly bool IsBuilder= true;
#>