using System;
namespace CardSolutionHost.Entitys
{
	public partial class MachinesEntity: BaseEntity
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public MachinesEntity()
		{
			MachineAlias=string.Empty;
			IP=string.Empty;
			CommPassword=string.Empty;
			FirmwareVersion=string.Empty;
			ProductType=string.Empty;
			DeviceNetmask=string.Empty;
			DeviceGetway=string.Empty;
			sn=string.Empty;
			PhotoStamp=string.Empty;
		}
		public int ID{ get; set; }
		public string MachineAlias{ get; set; }
		public int ConnectType{ get; set; }
		public string IP{ get; set; }
		public int SerialPort{ get; set; }
		public int Port{ get; set; }
		public int Baudrate{ get; set; }
		public int MachineNumber{ get; set; }
		public bool IsHost{ get; set; }
		public bool Enabled{ get; set; }
		public string CommPassword{ get; set; }
		public short UILanguage{ get; set; }
		public short DateFormat{ get; set; }
		public short InOutRecordWarn{ get; set; }
		public short Idle{ get; set; }
		public short Voice{ get; set; }
		public short managercount{ get; set; }
		public short usercount{ get; set; }
		public short fingercount{ get; set; }
		public short SecretCount{ get; set; }
		public string FirmwareVersion{ get; set; }
		public string ProductType{ get; set; }
		public short LockControl{ get; set; }
		public int Purpose{ get; set; }
		public string DeviceNetmask{ get; set; }
		public string DeviceGetway{ get; set; }
		public string sn{ get; set; }
		public string PhotoStamp{ get; set; }
	}

	
insert into Machines(MachineAlias,ConnectType,IP,SerialPort,Port,Baudrate,MachineNumber,IsHost,Enabled,CommPassword,UILanguage,DateFormat,InOutRecordWarn,Idle,Voice,managercount,usercount,fingercount,SecretCount,FirmwareVersion,ProductType,LockControl,Purpose,DeviceNetmask,DeviceGetway,sn,PhotoStamp) values (@MachineAlias,@ConnectType,@IP,@SerialPort,@Port,@Baudrate,@MachineNumber,@IsHost,@Enabled,@CommPassword,@UILanguage,@DateFormat,@InOutRecordWarn,@Idle,@Voice,@managercount,@usercount,@fingercount,@SecretCount,@FirmwareVersion,@ProductType,@LockControl,@Purpose,@DeviceNetmask,@DeviceGetway,@sn,@PhotoStamp); select @ID=@@IDENTITY


update Machines set MachineAlias=@MachineAlias,ConnectType=@ConnectType,IP=@IP,SerialPort=@SerialPort,Port=@Port,Baudrate=@Baudrate,MachineNumber=@MachineNumber,IsHost=@IsHost,Enabled=@Enabled,CommPassword=@CommPassword,UILanguage=@UILanguage,DateFormat=@DateFormat,InOutRecordWarn=@InOutRecordWarn,Idle=@Idle,Voice=@Voice,managercount=@managercount,usercount=@usercount,fingercount=@fingercount,SecretCount=@SecretCount,FirmwareVersion=@FirmwareVersion,ProductType=@ProductType,LockControl=@LockControl,Purpose=@Purpose,DeviceNetmask=@DeviceNetmask,DeviceGetway=@DeviceGetway,sn=@sn,PhotoStamp=@PhotoStamp where ID=@ID


database.AddInParameter(cmd, "ID", DbType.Int32, entity.ID);
database.AddInParameter(cmd, "MachineAlias", DbType.String, entity.MachineAlias);
database.AddInParameter(cmd, "ConnectType", DbType.Int32, entity.ConnectType);
database.AddInParameter(cmd, "IP", DbType.String, entity.IP);
database.AddInParameter(cmd, "SerialPort", DbType.Int32, entity.SerialPort);
database.AddInParameter(cmd, "Port", DbType.Int32, entity.Port);
database.AddInParameter(cmd, "Baudrate", DbType.Int32, entity.Baudrate);
database.AddInParameter(cmd, "MachineNumber", DbType.Int32, entity.MachineNumber);
database.AddInParameter(cmd, "IsHost", DbType.Boolean, entity.IsHost);
database.AddInParameter(cmd, "Enabled", DbType.Boolean, entity.Enabled);
database.AddInParameter(cmd, "CommPassword", DbType.String, entity.CommPassword);
database.AddInParameter(cmd, "UILanguage", DbType.Int16, entity.UILanguage);
database.AddInParameter(cmd, "DateFormat", DbType.Int16, entity.DateFormat);
database.AddInParameter(cmd, "InOutRecordWarn", DbType.Int16, entity.InOutRecordWarn);
database.AddInParameter(cmd, "Idle", DbType.Int16, entity.Idle);
database.AddInParameter(cmd, "Voice", DbType.Int16, entity.Voice);
database.AddInParameter(cmd, "managercount", DbType.Int16, entity.managercount);
database.AddInParameter(cmd, "usercount", DbType.Int16, entity.usercount);
database.AddInParameter(cmd, "fingercount", DbType.Int16, entity.fingercount);
database.AddInParameter(cmd, "SecretCount", DbType.Int16, entity.SecretCount);
database.AddInParameter(cmd, "FirmwareVersion", DbType.String, entity.FirmwareVersion);
database.AddInParameter(cmd, "ProductType", DbType.String, entity.ProductType);
database.AddInParameter(cmd, "LockControl", DbType.Int16, entity.LockControl);
database.AddInParameter(cmd, "Purpose", DbType.Int32, entity.Purpose);
database.AddInParameter(cmd, "DeviceNetmask", DbType.String, entity.DeviceNetmask);
database.AddInParameter(cmd, "DeviceGetway", DbType.String, entity.DeviceGetway);
database.AddInParameter(cmd, "sn", DbType.String, entity.sn);
database.AddInParameter(cmd, "PhotoStamp", DbType.String, entity.PhotoStamp);


