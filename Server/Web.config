<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="policyInjection" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.Configuration.PolicyInjectionSettings, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=null" />
  </configSections>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true"
    defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="Rolling Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        fileName="logs\log.log" footer="=========================================================================================================================================================================="
        formatter="Text Formatter" header="=========================================================================================================================================================================="
        rollFileExistsBehavior="Increment" rollInterval="Day" rollSizeKB="0"
        timeStampPattern="yyyy-MM-dd" maxArchivedFiles="0" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack"
        filter="All" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        template="时间:{timestamp(local)}{newline}&#xA;分类: {category}{newline}&#xA;消息:{message}{newline}&#xA;优先级: {priority}{newline}&#xA;严重程度: {severity}{newline}&#xA;标题:{title}{newline}&#xA;计算机名称: {machine}{newline}&#xA;应用程序域: {appDomain}{newline}&#xA;进程Id: {processId}{newline}&#xA;进程名称: {processName}{newline}&#xA;线程Id: {win32ThreadId}{newline}&#xA;线程名称: {threadName}"
        name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="WCFExceptionPolicy">
        <exceptionTypes>
          <add name="BusinessException" type="FengSharp.OneCardAccess.Common.BusinessException, FengSharp.OneCardAccess.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
            postHandlingAction="ThrowNewException" />
          <add name="LoginTimeOutException" type="FengSharp.OneCardAccess.Common.LoginTimeOutException, FengSharp.OneCardAccess.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
            postHandlingAction="ThrowNewException" />
          <add name="AllException" type="System.Exception, mscorlib" postHandlingAction="ThrowNewException" >
            <exceptionHandlers>
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
                exceptionMessage="ServerExceptionMessage" exceptionMessageResourceName="ServerExceptionMessage"
                exceptionMessageResourceType="FengSharp.OneCardAccess.Server.Properties.Resources, FengSharp.OneCardAccess.Server"
                replaceExceptionType="FengSharp.OneCardAccess.Common.BusinessException, FengSharp.OneCardAccess.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="ExceptionLogPolicy">
        <exceptionTypes>
          <add name="AllException" type="System.Exception, mscorlib" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
                logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
                formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                priority="0" />
            </exceptionHandlers>
          </add>
          <add name="BusinessException" type="FengSharp.OneCardAccess.Common.BusinessException, FengSharp.OneCardAccess.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
            postHandlingAction="None" />
          <add name="LoginTimeOutException" type="FengSharp.OneCardAccess.Common.LoginTimeOutException, FengSharp.OneCardAccess.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
            postHandlingAction="None" />
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <dataConfiguration defaultDatabase="DefaultConnectionString" />
  <connectionStrings>
    <add name="DefaultConnectionString" connectionString="data source=.;initial catalog=OneCardAccessDataBase;User Id = sa;Password=111111"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="SessionExpirationMinutes" value="30" />
    <add key="FileAttachMentPath" value="" />
    <!--<add key="FileAttachMentURL" value="" />-->
  </appSettings>
  <cachingConfiguration defaultCacheManager="SessionState Cache Manager">
    <cacheManagers>
      <add name="SessionState Cache Manager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000"
        numberToRemoveWhenScavenging="10" backingStoreName="Isolated Storage Cache Store" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        name="NullBackingStore" />
      <add name="Isolated Storage Cache Store" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        encryptionProviderName="" partitionName="SessionState Cache" />
    </backingStores>
  </cachingConfiguration>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=null" />
    <!--<sectionExtension type="FengSharp.OneCardAccess.Common.Configuration.AutoInterceptionConfigurationExtension,FengSharp.OneCardAccess.Common" />-->
    <container name="ServicesContainer">
      <extension type="Interception" />

      <register type="FengSharp.OneCardAccess.ServiceInterfaces.IBasicInfoService,FengSharp.OneCardAccess.ServiceInterfaces"
               mapTo="FengSharp.OneCardAccess.Services.BasicInfoService,FengSharp.OneCardAccess.Services">
        <!--<lifetime type="singleton"/>-->
        <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
        <!--<interceptor type="TransparentProxyInterceptor" />
        <interceptionBehavior isDefaultForType="true" type="PolicyInjectionBehavior"/>-->
        <policyInjection/>
      </register>
      <register type="FengSharp.OneCardAccess.ServiceInterfaces.IRBACService,FengSharp.OneCardAccess.ServiceInterfaces"
                mapTo="FengSharp.OneCardAccess.Services.RBACService,FengSharp.OneCardAccess.Services">
        <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
        <policyInjection/>
      </register>
      <register type="FengSharp.OneCardAccess.ServiceInterfaces.IConnectService,FengSharp.OneCardAccess.ServiceInterfaces"
                mapTo="FengSharp.OneCardAccess.Services.ConnectService,FengSharp.OneCardAccess.Services">
        <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
        <policyInjection/>
      </register>
      <interception>
        <policy name="Policy">
          <matchingRule type="AssemblyMatchingRule" name="Assembly Matching Rule">
            <constructor>
              <param name="assemblyName" value="FengSharp.OneCardAccess.ServiceInterfaces"></param>
            </constructor>
          </matchingRule>
          <callHandler type="FengSharp.OneCardAccess.Common.ExceptionHandle.ExceptionHandlers.CustomerExceptionHandler, FengSharp.OneCardAccess.Common"
                       name="Exception Handling Call Handler">
            <constructor>
              <param name="exceptionPolicyName" value="ExceptionLogPolicy"></param>
            </constructor>
          </callHandler>
        </policy>
      </interception>
      <!--<extension type="FengSharp.OneCardAccess.Common.PolicyInjectionExtension,FengSharp.OneCardAccess.Common"/>-->
    </container>
  </unity>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <behaviors>
      <endpointBehaviors>
        <behavior name="DefaultEndpointBehavior">
          <Session sessionCheck="true" />
        </behavior>
        <behavior name="SecondEndpointBehavior" >
          <Session sessionCheck="false" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="DefaultServiceBehavior">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="false" />
          <unity containerName="ServicesContainer" />
          <ExceptionHandling exceptionPolicy="WCFExceptionPolicy" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="unity" type="FengSharp.OneCardAccess.Common.UnityBehaviorElement, FengSharp.OneCardAccess.Common" />
        <add name="ExceptionHandling" type="FengSharp.OneCardAccess.Common.ExceptionHandlingBehaviorElement, FengSharp.OneCardAccess.Common" />
        <add name="Session" type="FengSharp.OneCardAccess.Common.SessionBehaviorElement, FengSharp.OneCardAccess.Common" />
      </behaviorExtensions>
    </extensions>
    <bindings>
      <netTcpBinding>
        <binding name="DefaultnetTcpBinding" closeTimeout="00:03:00"
          openTimeout="00:03:00" receiveTimeout="00:03:00" >
          <security mode="None"/>
        </binding>
      </netTcpBinding>
    </bindings>
    <services>

      <service name="FengSharp.OneCardAccess.Services.RBACService" behaviorConfiguration="DefaultServiceBehavior">
        <endpoint address="net.tcp://127.0.0.1/OneCardAccessServer/RBACService.svc" behaviorConfiguration="DefaultEndpointBehavior"
          binding="netTcpBinding" bindingConfiguration="DefaultnetTcpBinding" name="RBACServiceEndPoint"
          contract="FengSharp.OneCardAccess.ServiceInterfaces.IRBACService" />
        <endpoint address="mex" binding="mexTcpBinding" bindingConfiguration=""
          contract="IMetadataExchange" />
      </service>
      <service name="FengSharp.OneCardAccess.Services.BasicInfoService" behaviorConfiguration="DefaultServiceBehavior">
        <endpoint address="net.tcp://127.0.0.1/OneCardAccessServer/BasicInfoService.svc" behaviorConfiguration="DefaultEndpointBehavior"
          binding="netTcpBinding" bindingConfiguration="DefaultnetTcpBinding" name="BasicInfoServiceEndPoint"
          contract="FengSharp.OneCardAccess.ServiceInterfaces.IBasicInfoService" />
        <endpoint address="mex" binding="mexTcpBinding" bindingConfiguration=""
          name="" contract="IMetadataExchange" />
      </service>
      <service name="FengSharp.OneCardAccess.Services.ConnectService" behaviorConfiguration="DefaultServiceBehavior">
        <endpoint address="net.tcp://127.0.0.1/OneCardAccessServer/ConnectService.svc" behaviorConfiguration="SecondEndpointBehavior"
          binding="netTcpBinding" bindingConfiguration="DefaultnetTcpBinding" name="RBACServiceEndPoint"
          contract="FengSharp.OneCardAccess.ServiceInterfaces.IConnectService" />
        <endpoint address="mex" binding="mexTcpBinding" bindingConfiguration=""
          contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>
</configuration>
