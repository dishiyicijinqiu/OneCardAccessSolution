<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="policyInjection" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.Configuration.PolicyInjectionSettings, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=null" />
  </configSections>
  <!--<policyInjection>
    <policies>
      <add name="Policy">
        <matchingRules>
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.AssemblyMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
            match="FengSharp.OneCardAccess.Services" name="Assembly Matching Rule" />
        </matchingRules>
        <handlers>
          <add type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PolicyInjection.ExceptionCallHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
            exceptionPolicyName="ErrorPolicy" name="Exception Handling Call Handler" />
        </handlers>
      </add>
    </policies>
  </policyInjection>-->
  <exceptionHandling>
    <exceptionPolicies>
      <add name="ErrorPolicy">
        <exceptionTypes>
          <!--<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
         logCategory="WCFMethodLog" eventId="100" severity="Error" title="服务调用失败"
         formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
         priority="0" />
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
                 exceptionMessage="服务调用失败" replaceExceptionType="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              -->
          <!--<add type="FengSharp.OneCardAccess.Common.CustomerExceptionHandler, FengSharp.OneCardAccess.Common"
                name="Custom Handler" />-->
          <!--
            </exceptionHandlers>
          </add>-->
          <add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
                  formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                  logCategory="ServiceMethod" eventId="100" severity="Error" title="ServiceMethodError" priority="0" />
              <add name="Replace Handler" 
                   type="FengSharp.OneCardAccess.Common.ResourceReplaceHandler, FengSharp.OneCardAccess.Common"
                   exceptionMessageKey="ReplaceExceptionMessage"
                  exceptionMessageType="FengSharp.OneCardAccess.Server.Properties, FengSharp.OneCardAccess.Server" 
                   replaceExceptionType="System.Exception, mscorlib" />
              <!--<add type="FengSharp.OneCardAccess.Common.CustomerExceptionHandler, FengSharp.OneCardAccess.Common" name="Custom Handler" />-->
            </exceptionHandlers>
          </add>
          <add name="BusinessException" type="FengSharp.OneCardAccess.Infrastructure.Exceptions.BusinessException, FengSharp.OneCardAccess.Infrastructure"
            postHandlingAction="None"/>
          <add name="LoginTimeOutException" type="FengSharp.OneCardAccess.Infrastructure.Exceptions.LoginTimeOutException, FengSharp.OneCardAccess.Infrastructure"
            postHandlingAction="None"/>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>


  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=null" />
    <container name="ServicesContainer">
      <extension type="Interception" />
      <register type="FengSharp.OneCardAccess.ServiceInterfaces.IBasicInfoService,FengSharp.OneCardAccess.ServiceInterfaces"
                mapTo="FengSharp.OneCardAccess.Services.BasicInfoService,FengSharp.OneCardAccess.Services">
        <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
        <policyInjection/>
      </register>
      <register type="FengSharp.OneCardAccess.ServiceInterfaces.IRBACService,FengSharp.OneCardAccess.ServiceInterfaces"
                mapTo="FengSharp.OneCardAccess.Services.RBACService,FengSharp.OneCardAccess.Services">
        <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
        <policyInjection/>
      </register>
      <!--<extension type="FengSharp.OneCardAccess.Common.PolicyInjectionExtension,FengSharp.OneCardAccess.Common"/>-->
    </container>
  </unity>

  <dataConfiguration defaultDatabase="DefaultConnectionString" />
  <connectionStrings>
    <add name="DefaultConnectionString" connectionString="data source=.;initial catalog=OneCardAccessDataBase;User Id = sa;Password=111111"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="false" />
          <unity containerName="ServicesContainer" />
          <ExceptionHandling exceptionPolicyName="ErrorPolicy" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="unity" type="FengSharp.OneCardAccess.Common.UnityBehaviorElement, FengSharp.OneCardAccess.Common" />
        <add name="ExceptionHandling" type="FengSharp.OneCardAccess.Common.ExceptionHandlingBehaviorElement, FengSharp.OneCardAccess.Common" />
      </behaviorExtensions>
    </extensions>
    <services>
      <service name="FengSharp.OneCardAccess.Services.RBACService">
        <endpoint address="net.tcp://127.0.0.1/OneCardAccessServer/RBACService.svc"
          binding="netTcpBinding" bindingConfiguration="" name="RBACServiceEndPoint"
          contract="FengSharp.OneCardAccess.ServiceInterfaces.IRBACService" />
        <endpoint address="mex" binding="mexTcpBinding" bindingConfiguration=""
          contract="IMetadataExchange" />
      </service>
      <service name="FengSharp.OneCardAccess.Services.BasicInfoService">
        <endpoint address="net.tcp://127.0.0.1/OneCardAccessServer/BasicInfoService.svc"
          binding="netTcpBinding" bindingConfiguration="" name="BasicInfoServiceEndPoint"
          contract="FengSharp.OneCardAccess.ServiceInterfaces.IBasicInfoService" />
        <endpoint address="mex" binding="mexTcpBinding" bindingConfiguration=""
          name="" contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true"
    defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="Rolling Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        fileName="logs\log.log" footer="----------------------------------------"
        formatter="Text Formatter" header="----------------------------------------"
        rollFileExistsBehavior="Overwrite" rollInterval="Day" rollSizeKB="0"
        timeStampPattern="yyyy-MM-dd" maxArchivedFiles="0" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack"
        filter="All" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=null"
        template="时间:{timestamp(local)}{newline}&#xA;分类: {category}{newline}&#xA;消息:{message}{newline}&#xA;优先级: {priority}{newline}&#xA;严重程度: {severity}{newline}&#xA;标题:{title}{newline}&#xA;计算机名称: {machine}{newline}&#xA;应用程序域: {appDomain}{newline}&#xA;进程Id: {processId}{newline}&#xA;进程名称: {processName}{newline}&#xA;线程Id: {win32ThreadId}{newline}&#xA;线程名称: {threadName}"
        name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="ServiceMethod">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
</configuration>
