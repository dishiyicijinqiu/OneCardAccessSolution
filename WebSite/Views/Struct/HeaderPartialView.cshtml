
<style type="text/css">
    /*ViewBody_HeaderTop*/
    #ViewBody_Header .ViewBody_HeaderTop {
        position: absolute;
        left: 46%;
    }

        #ViewBody_Header .ViewBody_HeaderTop .templateTitle {
            margin: 0;
        }

            #ViewBody_Header .ViewBody_HeaderTop .templateTitle span {
                position: relative;
                float: left;
                margin: 1px 1px 1px 1px;
                text-decoration: none;
                font-size: 13px;
                color: black;
                width: 100%;
                text-align: center;
            }
    /*ViewBody_HeaderTop*/
    /*ViewBody_HeaderMenu*/
    #ViewBody_Header .ViewBody_HeaderMenu {
        padding: 0px;
        border-width: 0;
    }
        #ViewBody_Header .ViewBody_HeaderMenu .fileTabtemplateDiv {
            width: 32px;
            height: 32px;
            background-image: url(../CSS/Ribbon/home_32x32.png);
        }
        /*Office2010Blue*/
        #ViewBody_Header .ViewBody_HeaderMenu .dxrControl_Office2010Blue .dxr-minBtn {
            padding-top: 10px;
        }
        #ViewBody_Header .ViewBody_HeaderMenu .dxrControl_Office2010Blue .dxtcLite_Office2010Blue.dxtc-top .dxtc-tab.dxr-fileTab {
            border-width: 0px 0px 1px 0px;
            background: none;
        }
        #ViewBody_Header .ViewBody_HeaderMenu .dxtcLite_Office2010Blue > .dxtc-stripContainer li:not(.dxtc-lead){
            margin-top: 12px;
        }
    /*Office2010Blue*/
    /*ViewBody_HeaderMenu*/
</style>
<div class="ViewBody_HeaderTop">
    <div class="templateTitle">
        @Html.DevExpress().Label(settings =>
        {
            settings.Text = Resources.SystemInfo_SystemName;
        }).GetHtml()
    </div>
</div>

<div class="ViewBody_HeaderMenu">
    @Html.DevExpress().Ribbon(settings =>
{
    settings.Name = "ribbon";
    settings.SetFileTabTemplateContent(c =>
    {
        TabControlTemplateContainerBase container = (TabControlTemplateContainerBase)c;
        if (!container.Active)
        {
            ViewContext.Writer.Write(@"<div id=""FileTabtemplateDiv"" class=""fileTabtemplateDiv""></div>");
        }
    });

    //settings.ClientSideEvents.MinimizationStateChanged = "function(s, e) { OnRibbonResize(s,e); }";
    settings.ClientSideEvents.MinimizationStateChanged = "function(s, e) { ribbon; }";
    var tab = settings.Tabs.Add("Home");
    var tasksGroup = tab.Groups.Add("Tasks");
    tasksGroup.Items.Add(MVCxRibbonItemType.ButtonItem, i =>
    {
        i.Text = "TasksList";
        i.Name = "Tasks List";
        i.Size = RibbonItemSize.Large;
        ((RibbonButtonItem)i).LargeImage.IconID =
            IconID.TasksTask32x32;
    });
    tasksGroup.Items.Add(MVCxRibbonItemType.ButtonItem, i =>
    {
        i.Text = "New";
        i.Name = "NewTask";
        i.Size = RibbonItemSize.Small;
        ((RibbonButtonItem)i).SmallImage.IconID =
            IconID.TasksNewtask16x16;
    });
    // And other groups with items

    var tab1 = settings.Tabs.Add("eeeeeeeeeeeeeeeeeeeeeeee");
    var tasksGroup1 = tab1.Groups.Add("bbbb");
    tasksGroup1.Items.Add(MVCxRibbonItemType.ButtonItem, i =>
    {
        i.Text = "TasksList";
        i.Name = "Tasks List";
        i.Size = RibbonItemSize.Large;
        ((RibbonButtonItem)i).LargeImage.IconID =
            IconID.TasksTask32x32;
    });
    tasksGroup1.Items.Add(MVCxRibbonItemType.ButtonItem, i =>
    {
        i.Text = "New";
        i.Name = "NewTask";
        i.Size = RibbonItemSize.Small;
        ((RibbonButtonItem)i).SmallImage.IconID =
            IconID.TasksNewtask16x16;
    });

}).GetHtml()
</div>